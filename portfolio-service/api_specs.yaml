openapi: 3.0.0
info:
  title: Portfolio Management Service API
  version: 1.0.1
  description: API for managing user portfolios, transactions, and performance metrics.
servers:
  - url: http://localhost:3002/portfolio
    description: Local development server
tags:
  - name: Portfolio Management
    description: Operations related to tracking user portfolios and performance.
paths:
  /portfolio:
    get:
      summary: Retrieve user's current portfolio
      operationId: getUserPortfolio
      tags:
        - Portfolio Management
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Portfolio retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  holdings:
                    type: array
                    items:
                      type: object
                      properties:
                        stockSymbol:
                          type: string
                          example: AAPL
                        quantity:
                          type: integer
                          example: 10
                        averagePrice:
                          type: number
                          format: float
                          example: 150.75
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /portfolio-summary:
    get:
      summary: Retrieve combined portfolio transactions and performance summary
      operationId: getUserPortfolioSummary
      tags:
        - Portfolio Management
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Portfolio summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        transactionId:
                          type: string
                          example: tx123
                        stockSymbol:
                          type: string
                          example: TSLA
                        type:
                          type: string
                          enum: [buy, sell]
                          example: buy
                        quantity:
                          type: integer
                          example: 5
                        price:
                          type: number
                          format: float
                          example: 720.5
                        date:
                          type: string
                          format: date-time
                          example: 2023-07-01T14:23:00Z
                  performance:
                    type: object
                    properties:
                      totalValue:
                        type: number
                        format: float
                        example: 10250.75
                      totalInvested:
                        type: number
                        format: float
                        example: 9500.00
                      profitLoss:
                        type: number
                        format: float
                        example: 750.75
                      returnPercentage:
                        type: number
                        format: float
                        example: 7.9

        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid user ID format
        details:
          type: string
          nullable: true
          example: User ID must be a valid UUID

  responses:

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: 401
            message: Unauthorized
            details: Missing or invalid authentication token


    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: 500
            message: Internal server error
            details: Unexpected error occurred while processing the request
